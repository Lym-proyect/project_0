defvar variable1 0        defvar variable2 6            defvar variable3 0defproc myproc (param1, param2, param3){    if facing(north)    {        myproc(variable1, variable2, variable3)    }    else    {        turnto(north)    } ;     if not facing(north)    {        turnto(north)    } else { nop()};     if can(walk(1, front))    {        walk(1, front)    }    else    {        walk(1, north)    } ;     if not facing(north)    {        turnto(north)    } else { nop()};     if can(walk(1, front))    {        walk(variable1, front)    }    else    {        walk(1, north)    } ;    if not not facing(north)    {        turnto(north)    } else { nop()};    if can(walk(1, front))    {        walk(1, front)    }     else    {        walk(1, north)    };    if not facing(north)    {        turnto(north)    } else { nop()};    if can(walk(1, front))    {        while facing(north)        {            walk(1, front)        } ;         repeat param1 times        {            walk(1, front)        }    }    else    {        if facing(north)        {            walk(1, front)        }        else        {           nop()        }    } ;    if not facing(north)    {        turnto(north)    } else { nop()};    if can(walk(1, front))    {        jump(1, 1)    }    else    {       letgo(1)    } ;    if not facing(north)    {        turnto(north)    } else { nop()};    if can(walk(1, front))    {       grab(1) }    else    {        drop(1)    } ;    if not facing(north)    {        get(1)    }else { nop()}}defproc myproc2 (param1, param2, param3){    walk(param1, front)  ;  leap(param2, front)  ;  walk(param3, front)      ;  turnto(north)  ;  walk(1, front)  ;  turnto(east)  ;      walk(variable3, front)  ;  turnto(south)  ;  walk(1, front)  ;       turnto(west)  ;  walk(variable1, front)  ;  turnto(north)  ;        walk(variable2, front)  ;  turnto(east)  ;  walk(1, front)  ;         turnto(south) ;  turnto(north); myproc(1, 2, 3); nop()}    {    myproc(1, 2, 3);    myproc2(1, 2, 3);    walk(1, front);     jump(1, 1); nop()        }